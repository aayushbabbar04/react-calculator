{"version":3,"sources":["components/Calculator/Styled/index.js","components/Calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","el","value","target","getAttribute","includes","chooseOperation","compute","result","previousNumber","parseFloat","currentNumber","isNaN","onClick","String","slice","data","undefined","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b648eb.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\ndisplay:grid;\r\njustify-content:center;\r\nalign-content:center;\r\nwidth:400px;\r\nmargin:40px auto;\r\ngrid-template-columns: repeat(4, 100px);\r\ngrid-template-rows: minmax(120px, auto) repeat(5,100px);\r\nbox-shadow:2px 2px 10px #333;\r\nborder-radius:10px;\r\n`\r\n\r\nexport const Screen = styled.div`\r\ngrid-column: 1/-1;\r\nbackground-color: rgba(60,64,67,0.75);\r\ndisplay:flex;\r\njustify-content:space-around;\r\nflex-direction:column;\r\npadding:10px;\r\nword-wrap:break-word;\r\nword-break: break-all;\r\ntext-align:right;\r\nborder-top-left-radius:10px;\r\nborder-top-right-radius:10px;\r\n`\r\n\r\nexport const Previous=styled.div`\r\ncolor:rgba(255,255,255,0.3);\r\nfont-size:1.5rem;\r\n`\r\n\r\nexport const Current=styled.div`\r\ncolor:white;\r\nfont-size:2.5rem;\r\n`\r\n\r\nexport const Button=styled.button`\r\ncursor:pointer;\r\nfont-size:2rem;\r\nborder:1px outset white;\r\noutline:none;\r\nbackground-color:rgba(255,255,255,0.75);\r\n&:hover{\r\n    background-color:rgba(255,255,255,0.9);\r\n}\r\n\r\n   ${({gridSpan})=> gridSpan && `grid-column :span ${gridSpan};`}\r\n\r\n   ${({operation})=> operation && `background-color :gray;`}\r\n\r\n   ${({control})=> control && `background-color :skyblue;`}\r\n\r\n   ${({equals})=> equals && `border-bottom-right-radius:10px; background-color :gray;`}\r\n\r\n   ${({period})=> period && `border-bottom-left-radius:10px; background-color :skyblue;`}\r\n\r\n\r\n\r\n\r\n`","import React,{useState} from 'react';\r\nimport { Container, Current, Previous, Screen,Button } from './Styled';\r\n\r\n\r\nexport default function Calculator(){\r\n\r\n    const[previous,setPrevious]=useState('');\r\n    const[current,setCurrent]=useState('');\r\n    const[operation,setOperation]=useState('');\r\n\r\n    const appendValue=(el)=>{\r\n      const value=el.target.getAttribute('data');\r\n      \r\n      if(value==='.' && current.includes('.'))return;\r\n      setCurrent(current + value);\r\n    }\r\n\r\n    const handledelete=()=>{\r\n      setCurrent(String(current).slice(0,-1));\r\n    }\r\n\r\n    const handleAllClear =()=>{\r\n      setCurrent('');\r\n      setPrevious('');\r\n      setOperation('');\r\n    } \r\n\r\n    const chooseOperation=(el)=>{\r\n      if(current==='')return;\r\n      if(previous!==''){\r\n        let value= compute();\r\n        setPrevious(value);\r\n      }\r\n      else{\r\n        setPrevious(current);\r\n      }\r\n\r\n      setCurrent('');\r\n      setOperation(el.target.getAttribute('data'));\r\n    }\r\n\r\n    const equals = () =>{\r\n      let value=compute();\r\n      if(value===undefined || value===null) return;\r\n\r\n      setCurrent(value);\r\n      setPrevious('');\r\n      setOperation('');\r\n    }\r\n\r\n    const compute=()=>{\r\n\r\n        let result;\r\n        let previousNumber = parseFloat(previous);\r\n        let currentNumber=parseFloat(current);\r\n\r\n        if(isNaN(previousNumber) || isNaN(currentNumber)) return;\r\n\r\n        switch(operation){\r\n          case '÷':\r\n            result=previousNumber/currentNumber;\r\n            break;\r\n          case '×':\r\n            result=previousNumber*currentNumber;\r\n            break; \r\n          case '+':\r\n              result=previousNumber+currentNumber;\r\n              break;\r\n          case '-':\r\n            result=previousNumber-currentNumber;\r\n            break;    \r\n            default:\r\n              return;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    return(\r\n      <Container>\r\n        <Screen>\r\n            <Previous>{previous} {operation}</Previous>\r\n            <Current>{current}</Current>\r\n        </Screen>\r\n        <Button gridSpan={2} onClick={handleAllClear} control>AC</Button>\r\n        <Button onClick={handledelete} control>DEL</Button>\r\n        <Button  data={'÷'} onClick={chooseOperation} operation>÷</Button>\r\n        <Button data={'7'} onClick={appendValue}>7</Button>\r\n        <Button data={'8'} onClick={appendValue}>8</Button>\r\n        <Button data={'9'} onClick={appendValue}>9</Button>\r\n        <Button data={'×'} onClick={chooseOperation} operation>×</Button>\r\n        <Button data={'4'} onClick={appendValue}>4</Button>\r\n        <Button data={'5'} onClick={appendValue}>5</Button>\r\n        <Button data={'6'} onClick={appendValue}>6</Button>\r\n        <Button data={'+'} onClick={chooseOperation} operation>+</Button>\r\n        <Button data={'1'} onClick={appendValue}>1</Button>\r\n        <Button data={'2'} onClick={appendValue}>2</Button>\r\n        <Button data={'3'} onClick={appendValue}>3</Button>\r\n        <Button data={'-'} onClick={chooseOperation} operation>-</Button>\r\n        <Button data={'.'} period onClick={appendValue}>•</Button>\r\n        <Button data={'0'} onClick={appendValue}>0</Button>\r\n        <Button gridSpan={2} onClick={equals} equals>=</Button>     \r\n      </Container>\r\n    )\r\n}","\nimport Calculator from './components/Calculator';\nfunction App() {\n  return (\n    <Calculator/>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}